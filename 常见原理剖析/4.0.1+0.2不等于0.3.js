// 0.1 + 0.2 !== 0.3
/***
 * 计算机底层是用二进制存储的
 * 1 => 1 => 2的0次方
 * 2 => 10 => 1 * 2^1 + 0 * 2^0
 * 3 => 11 => 1 * 2^1 + 1 * 2^0
 * 对于小数
 * 0.5 => 2的-1次方 => 0.1
 * 0.1转化成2进制 0.0001100110011...
 * 0.1 * 2 = 0.2 无整数
 * 0.2 * 2 = 0.4 无整数
 * 0.4 * 2 = 0.8 无整数
 * 0.8 * 2 = 0.6 余0.6
 * 0.6 * 2 = 0.2 余0.2
 * ...
 */

// 双精度浮点数 计算机是有位数存储限制的 值会比以前大一些
console.log(0.1.toString(2)); // 0.0001100110011001100110011001100110011001100110011001101
console.log(0.2.toString(2)); // 0.001100110011001100110011001100110011001100110011001101

// 0.1 + 0.2 !== 0.3 原因十进制转化成二进制的时候出现了偏差